
//print("Hello, world!")

let myConstant = 3.14
var myVariable = 2
myVariable = 5

let a = 1, b = 2

var x: Int = 10
var y: Float
y = 5.0
var welcome: String
welcome = "Xin ch√†o"

let PI = 3.14   // let PI: Double = 3.14
var count = 3   // var count: Int = 3

let œÄ = 3.14
var üêÆ = "Con b√≤"
üêÆ = "The cow"

print(2)
print("Xin ch√†o")
print(count)
print(welcome)
var name = "Quang"
var age = 27
print(name, age)    // In ra nhi·ªÅu tham s·ªë, c√°ch nhau d·∫•u ph·∫©y
print("T√™n:", name) //
print("Tu·ªïi:", age) //
print("Xin ch√†o \(name)! B·∫°n \(age) tu·ªïi r·ªìi √†?")   // Truy·ªÅn v√†o 2 tham s·ªë

// Ch√∫ th√≠ch 1 d√≤ng
/* Ch√∫ th√≠ch nhi·ªÅu d√≤ng
 D√≤ng 2
 D√≤ng 3 */

let cat = "üê±"; print(cat)

let minValue = Int32.min   // -2147483648
let maxValue = Int32.max   // 2147483647
UInt32.min  // 0
UInt32.max  // 4294967295

let decimalInteger = 17
let binaryInteger = 0b10001       // s·ªë 17 ·ªü h·ªá nh·ªã ph√¢n
let octalInteger = 0o21           // s·ªë 17 ·ªü h·ªá b√°t ph√¢n
let hexadecimalInteger = 0x11     // s·ªë 17 ·ªü h·ªá hexa

let decimalDouble = 12.1875
let exponentDouble = 1.21875e1
let hexadecimalDouble = 0xC.3p0

let soNguyen = 1_234_567
let soThuc = 1_234_567.890_1

let motNghin: UInt16 = 1_000
let mot: UInt8 = 1
let motNghinLeMot = motNghin + UInt16(mot)

let soNguyen1: Int8 = -10
//let soNguyen2: UInt8 = UInt8(soNguyen1) // bi√™n d·ªãch b√°o l·ªói

let phanNguyen = 3
let phanThuc = 0.14
let soPI = Double(phanNguyen) + phanThuc

let soThuc1 = Float(Int8.max) + Float(0.9)  // 127.9
let layPhanNguyen = Int8(soThuc1)   // 127

typealias SoNguyen = UInt8
let soLonNhat: SoNguyen = SoNguyen.max    // 255

var completed = true
if completed {
    print("ƒê√£ ho√†n th√†nh")
} else {
    print("Ch∆∞a ho√†n th√†nh")
}

/*
let i = 1
if i { // b√°o l·ªói kh√¥ng th·ªÉ √©p ki·ªÉu Int th√†nh Bool
    
}
*/

let http404Error = (404, "Not Found")
//let http404Error: (Int, String) = (404, "Not Found")
let (code, message) = http404Error
print("code: \(code)")
print("message: \(message)")

let (onlyCode, _) = http404Error
print("code: \(onlyCode)")

print("code: \(http404Error.0)")
print("message: \(http404Error.1)")

let http200Status = (statusCode: 200, description: "OK")
//let http200Status: (statusCode: Int, description: String) = (statusCode: 200, description: "OK")
//let http200Status: (statusCode: Int, description: String) = (200, "OK")

print("code: \(http200Status.statusCode)")
print("message: \(http200Status.description)")

let numberString = "123"
let convertedNumber = Int(numberString)
print(convertedNumber)  // Optional(123)

var serverCode: Int? = 404
// serverCode ch·ª©a gi√° tr·ªã ki·ªÉu Int l√† 404
serverCode = nil
// serverCode b√¢y gi·ªù kh√¥ng ch·ª©a g√¨ c·∫£

var answer: String?
// answer ƒë∆∞·ª£c t·ª± ƒë·ªông ƒë·∫∑t gi√° tr·ªã nil

if convertedNumber != nil {
    print("convertedNumber c√≥ ch·ª©a gi√° tr·ªã ki·ªÉu Int")
}

if convertedNumber != nil {
    print("gi√° tr·ªã c·ªßa convertedNumber l√†: \(convertedNumber!)")
}

if let number = convertedNumber {
    print("convertedNumber c√≥ ch·ª©a gi√° tr·ªã ki·ªÉu Int: \(number)")
} else {
    print("convertedNumber kh√¥ng ch·ª©a gi√° tr·ªã")
}
if let number = Int(numberString) {
    print("numberString c√≥ th·ªÉ chuy·ªÉn ƒë·ªïi th√†nh s·ªë: \(number)")
} else {
    print("numberString kh√¥ng th·ªÉ chuy·ªÉn ƒë·ªïi th√†nh s·ªë")
}

if let num1 = Int("4") {
    if let num2 = Int("20") {
        if num1 < num2 {
            print("\(num1) < \(num2)")
        }
    }
}
if let num1 = Int("4"), let num2 = Int("20"), num1 < num2 {
    print("\(num1) < \(num2)")
}
